{"ast":null,"code":"var _jsxFileName = \"/Users/hez/Downloads/12-adv-starting-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  /*#__PURE__*/_jsxDEV(Await, {\n    resolve: events,\n    children: loadEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n      events: loadEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 22\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","Suspense","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","resolve","children","loadEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/hez/Downloads/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport { Suspense } from \"react\";\n\nimport EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  const { events } = useLoaderData();\n\n  <Await resolve={events}>\n    {(loadEvents) => <EventsList events={loadEvents}></EventsList>}\n  </Await>;\n}\n\nexport default EventsPage;\n\nexport async function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n    //   status: 500,\n    // });\n    throw json(\n      { message: \"Could not fetch events.\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    return response;\n  }\n}\n\nexport function loader() {\n  return defer({\n    events: loadEvents,\n  });\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AACpE,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGV,aAAa,CAAC,CAAC;EAElC,aAAAO,OAAA,CAACJ,KAAK;IAACQ,OAAO,EAAED,MAAO;IAAAE,QAAA,EACnBC,UAAU,iBAAKN,OAAA,CAACF,UAAU;MAACK,MAAM,EAAEG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AACV;AAACR,EAAA,CANQD,UAAU;EAAA,QACER,aAAa;AAAA;AAAAkB,EAAA,GADzBV,UAAU;AAQnB,eAAeA,UAAU;AAEzB,OAAO,eAAeK,UAAUA,CAAA,EAAG;EACjC,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA,MAAMpB,IAAI,CACR;MAAEqB,OAAO,EAAE;IAA0B,CAAC,EACtC;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvB,OAAOtB,KAAK,CAAC;IACXQ,MAAM,EAAEG;EACV,CAAC,CAAC;AACJ;AAAC,IAAAK,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}